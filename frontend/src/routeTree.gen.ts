/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksIndexImport } from './routes/tasks/index'
import { Route as AccessIndexImport } from './routes/access/index'

// Create/Update Routes

const TasksIndexRoute = TasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRoute,
} as any)

const AccessIndexRoute = AccessIndexImport.update({
  id: '/access/',
  path: '/access/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/access/': {
      id: '/access/'
      path: '/access'
      fullPath: '/access'
      preLoaderRoute: typeof AccessIndexImport
      parentRoute: typeof rootRoute
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/access': typeof AccessIndexRoute
  '/tasks': typeof TasksIndexRoute
}

export interface FileRoutesByTo {
  '/access': typeof AccessIndexRoute
  '/tasks': typeof TasksIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/access/': typeof AccessIndexRoute
  '/tasks/': typeof TasksIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/access' | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to: '/access' | '/tasks'
  id: '__root__' | '/access/' | '/tasks/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AccessIndexRoute: typeof AccessIndexRoute
  TasksIndexRoute: typeof TasksIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AccessIndexRoute: AccessIndexRoute,
  TasksIndexRoute: TasksIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/access/",
        "/tasks/"
      ]
    },
    "/access/": {
      "filePath": "access/index.tsx"
    },
    "/tasks/": {
      "filePath": "tasks/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
